{"name":"SOA GUI Composition","tagline":"Fagdag i Webstep Fokus 6. november 2015","body":"## Innhold\r\n- [Nyttig informasjon](#nyttig-informasjon)\r\n- [Oppgaver](#oppgaver)\r\n- [Spørsmål](#spørsmål)\r\n- [API](#api)\r\n- [Tjenester](#tjenester)\r\n\r\n## Nyttig informasjon\r\n\r\n[Presentasjonen til Torstein](presentasjon/index.html)\r\n\r\n[Udi Dahan sin bortforklaring](http://udidahan.com/2012/06/23/ui-composition-techniques-for-correct-service-boundaries/)\r\n\r\n## Oppgaver\r\n\r\n1. Lag en liste av bøker med tittel, pris, bilde, og lagerbeholdning\r\n2. Vi detaljer for en bok\r\n3. Kjøp en bok. Bruker skal fylle ut leveringsadresse, betalingsinformasjon og til slutt få en kvittering for kjøpet.\r\n\r\nSekvensdiagram for #3:\r\n\r\n![Sequence diagram](http://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgQnV5IHNpbmdsZSBib29rCgpDbGllbnQtPlNhbGVzOgAbBWJvb2sgKAABBWlkLCBvcmRlciBpZCkKAB8FLT5TaGlwcGluZzogQm9vayBzb2xkICgAFRFCaWxsAAQhV2FyZWhvdXNlADUXAIEVCgBrCVNoaXAgdG8gKGFkZHJlc3MAgRUMAIFFCQB0CVBheSBieSAoY2FyZCBkZXRhaWwAJQ0AgR8HAIFJDFBheW1lbnQgcmVjZWl2ZQCBAg5ub3RlIHJpZ2h0IG9mAIEHBQCBCwtpdCEKAIIVCACBTw1PAII-BXNoaXBwAEMN&s=roundgreen)\r\n<!--sequence\r\ntitle Buy single book\r\n\r\nClient->Sales: Buy book (book id, order id)\r\nSales->Shipping: Book sold (order id)\r\nSales->Billing: Book sold (order id)\r\nSales->Warehouse: Book sold (order id)\r\n\r\nClient->Shipping: Ship to (address, order id)\r\n\r\nClient->Billing: Pay by (card details, order id)\r\nBilling->Shipping: Payment received (order id)\r\n\r\nnote right of Shipping: Ship it!\r\nShipping->Warehouse: Order shipped (order id)\r\n```\r\nGenerated with [www.websequencediagrams.com]( https://www.websequencediagrams.com/)\r\n-->\r\n\r\n## Spørsmål\r\n\r\n### Hvem eier applikasjonen?\r\n* Klassisk svar er _Branding Service_ eller lignende\r\n * Finnes det andre løsninger?\r\n* Hvordan vet den om tjenestemodulene, og hvordan får den tak i disse?\r\n  * Bundles ved bygg\r\n  * Bundles ved deploy\r\n  * Hentes fra forskjellige endepunkter i runtime\r\n\r\n### Orkestrering/ruting\r\n* Ligger all orkestrering i applikasjonen?\r\n* Hva om en userstory/forretningsprosses involverer flere tjenestemoduler?\r\n\r\n### Arbeidsflyt (utvikling)\r\n* Høna eller egget?\r\n  * Hvoran kan vi utvikle applikasjonen uavhengig av tjenestemodulene?\r\n  * Hvordan kan vi utvikle tjenestemodulene uavhengig av applikasjonen?\r\n* Hvordan løser vi versjonering?\r\n  * Pakker med avhengigheter\r\n  * Git submodules\r\n* Hvordan kan vi smidig jobbe på tvers av tjenestemodulene og applikasjonen\r\n\r\n### CSS\r\n* Hvordan sørger vi for at css ikke lekker fra en tjenestemodul over til applikasjonen eller andre moduler?\r\n* Hvordan kan applikasjonen påvirke hvordan tjenestemodulene vises (feks. hvor mye plass de skal ta)\r\n\r\n### Søk på tvers av tjenester\r\n* Kan vi løse det med GUI composition?\r\n  * Er det noen forkjell på å gjøre søk kontra andre API kall?\r\n  * Kan klienten sy sammen resultatene fra de individuelle tjenestene?\r\n\r\n## API\r\n\r\nAPIet skal representere en forenklet versjon av en online bokhandel, tilsvarende Amazon.\r\n\r\nHvis dere ikke ønsker å kjøre koden lokalt, har dere det tilgjengelig i Azure på http://webstepfagfredag.cloudapp.net/\r\n\r\n## Tjenester\r\n\r\nAPIet består av følgende tjenester\r\n\r\n### Sales\r\n\r\nProduktkatalog (liste over alle bøker)\r\n\r\n    GET /sales/books\r\n\r\n\r\nDetaljer om en bok\r\n\r\n    GET /sales/books/{bookId}  \r\n\r\n### Marketing\r\n\r\nPris på en bok\r\n\r\n    GET /marketing/bookprices/{bookId}\r\n\r\nBilde av boken\r\n\r\n    GET /marketing/imageurls/{bookId}\r\n\r\n### Shipping\r\n\r\nRegistere leveringsadresse på en ordre\r\n\r\n    POST /shipping/orders/{orderId}?address={address}\r\n\r\n\r\n### Billing\r\n\r\nRegistrere betalingsinformasjon på en ordre\r\n\r\n    POST /billing/orders/{orderId}?creditCardNumber={creditCardNumber}\r\n\r\n\r\n### Warehouse\r\n\r\nLagerbeholdning for en bok\r\n\r\n    GET /warehouse/inventory/{bookId}\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}